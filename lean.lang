# Quick and dirty Haskell highlight rules for GNU Source-highlight and SHJS
# Sergey Astanin
# Feel free to improve according to http://www.haskell.org/onlinereport/lexemes.html
# Source-highlight docs: http://www.gnu.org/software/src-highlite/source-highlight.html#Language-Definitions
# SHJS docs: http://shjs.sourceforge.net/doc/documentation.html

# as number.lang but also with Haskell octals
number =
'\<[+-]?((0x[[:xdigit:]]+)|(0[oO][0-7]+)|(([[:digit:]]*\.)?
[[:digit:]]+([eE][+-]?[[:digit:]]+)?))u?((int(?:8|16|32|64))|L)?\>'

# strings and chars (including non-control escapes)
string delim "\"" "\"" escape "\\"
string = '\'([^\\\']{1}|\\[\\\'0abfnrtv"&]|\\[[:digit:]]+|\\[oO][0-7]+|\\[xX][[:xdigit:]]+)\''

# show some syntax errors with "regex" style
regex = '\'[^\\\']{2,}\''

#keyword = '\<(case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)\>'
keyword = '\<(import|prelude|protected|private|noncomputable|definition|meta|renaming|hiding|exposing|parameter|parameters|begin|conjecture|constant|constants|hypothesis|lemma|corollary|variable|variables|premise|premises|theory|print|theorem|proposition|example|open|as|export|override|axiom|axioms|inductive|with|without|structure|record|universe|universes|alias|help|precedence|reserve|declare_trace|add_key_equivalence|match|infix|infixl|infixr|notation|postfix|prefix|instance|eval|vm_eval|check|coercion|end|this|suppose|using|using_well_founded|namespace|section|fields|attribute|local|set_option|extends|include|omit|classes|class|instances|coercions|attributes|raw|replacing|calc|have|show|suffices|by|in|at|let|forall|Pi|fun|exists|if|dif|then|else|assume|obtain|from|aliases|register_simp_ext|unless|break|continue|mutual|do|def|run_cmd|const|partial|mut|where|macro|syntax|deriving|return|try|catch|for|macro_rules|declare_syntax_cat|abbrev)\>'

comment delim "{-" "-}" multiline nested

# -- An end-of-line comment
# but -->, <--, |-- and --| are not comments in Haskell!
symbol = '([!#$$%*+\./<=>\?@\\\^\|\-~:]+)--'
comment start '(--)(?![!#$$%*+\./<=>\?@\\\^\|\-~:]+)'

# dont highlight types in qualified names, borrowed from caml.lang
type = '\<(?:[A-Z][\w\']*)\>(?![\.])'

symbol =
  "!","#","$","%","&","*","+",".","/","<","=",">","?","@","\\","^","\|","-","~",
  "(",")",",",";","[","]","`","{","}",
  ":"

cbracket = "{|}"
